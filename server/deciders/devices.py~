import sys
sys.path.insert(0, '../decision_tree')
import decision_tree

class Devices(decision_tree.Decider):
    """
    Analyzes the processes in the image
    """
    @staticmethod
    def decide(analyzer, signatures):
        breach = False
        ioc_list = []

        connections_signatures = signatures.get("devices", {})

        behaviour = connections_signatures.get("behaviour", "unknown")
        sets = connections_signatures.get("sets", [])

        aux = analyzer.run_plugin("malware.devicetree", "DeviceTree")

        for i in aux:
	    for individual_set in sets:
                id_list = individual_set.get("ids", [])
                
		if len(id_list) > 0:
                    id_list.remove(i.DriverName)
                    individual_set.set("ids", id_list)

                    if len(id_list) == 0:
                        breach = True
			ioc_list.append(["--Devices IoC--","Set matched", individual_set.name])

        return decision_tree.Decision(ioc_list, breach)


def load_decider():
    return Devices
